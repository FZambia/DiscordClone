user nginx;
worker_processes auto;
worker_rlimit_nofile 100000;

events
{
  worker_connections 20000;
  multi_accept on;
  use epoll;
}
http
{
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  limit_req_zone "$http_cf_connecting_ip" zone=zone:100m rate=50r/s;
  log_format main '$http_cf_connecting_ip $remote_user [$time_local] "$request" '
  '$status $body_bytes_sent '
  '"$http_user_agent" "$http_authorization"';

  underscores_in_headers on;

  access_log /var/log/nginx/access.log main;
  error_log /var/log/nginx/error.log;
  client_max_body_size 40M;

  # send headers in one peace, its better then sending them one by one
  tcp_nopush on;

  # don't buffer data sent, good for small data bursts in real time
  tcp_nodelay on;

  # allow the server to close connection on non responding client, this will free up memory
  reset_timedout_connection on;

  # Security reasons, turn off nginx versions
  server_tokens off;

  server
  {
    limit_req zone=zone burst=50 nodelay;
    server_name write-api-discord.ismkdc.com;
    
    # Ensure that HTTP/2 is enabled for the server
    listen 443 ssl http2;
    http2_push_preload on;

    ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
    ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;

    location /
    {
      if ($request_method = 'OPTIONS')
      {
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authentication,DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type' always;
        add_header 'Access-Control-Max-Age' 1728000 always;
        add_header 'Content-Type' 'text/plain charset=UTF-8' always;
        add_header 'Content-Length' 0 always;
        return 204;
      }
      if ($request_method != 'OPTIONS')
      {
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authentication,DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type' always;
      }

      proxy_pass http://write-api:80;
    }

  }

  server
  {
    limit_req zone=zone burst=50 nodelay;
    server_name read-api-discord.ismkdc.com;
    
    # Ensure that HTTP/2 is enabled for the server
    listen 443 ssl http2;
    http2_push_preload on;

    ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
    ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;

    location /
    {
      if ($request_method = 'OPTIONS')
      {
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authentication,DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type' always;
        add_header 'Access-Control-Max-Age' 1728000 always;
        add_header 'Content-Type' 'text/plain charset=UTF-8' always;
        add_header 'Content-Length' 0 always;
        return 204;
      }
      if ($request_method != 'OPTIONS')
      {
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authentication,DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type' always;
      }

      proxy_pass http://read-api:80;
    }
  }
  
  server
  {
    limit_req zone=zone burst=50 nodelay;
    server_name ws-discord.ismkdc.com;
    
    # Ensure that HTTP/2 is enabled for the server
    listen 443 ssl http2;
    http2_push_preload on;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_set_header Host $host;

    ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
    ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;
    

    location /
    {
      proxy_pass http://centrifugo:8000;
    }
  }

  server
  {
    server_name discord.ismkdc.com;
    
    # Ensure that HTTP/2 is enabled for the server
    listen 443 ssl http2;
    http2_push_preload on;

    ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
    ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;

    location /
    {
      proxy_pass http://frontend:80;
    }
  }
  
}